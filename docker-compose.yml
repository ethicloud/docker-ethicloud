version: '3.2'
services:
  traefik:
    image: traefik:v2.1
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --api.insecure=true
      - --providers.docker
      - --providers.file.directory=/etc/traefik/dynamic_conf
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs/:/certs/:ro
      - ./traefik.yml:/etc/traefik/dynamic_conf/conf.yml:ro

  rcf:
    build: rest-container-factory
    ports: # TODO : virer Ã§a si non pertinent
      - 5000:8000
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
      - type: bind
        source: /var/lib/docker
        target: /var/lib/docker
    environment:
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}

  bo:
    build: back-office
    volumes:
      - ./back-office/:/usr/src/app/
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=default"
      - "traefik.http.services.bo.loadbalancer.server.port=8000"
      - "traefik.http.routers.bo-router.entrypoints=web"
      - "traefik.http.routers.bo-router.rule=Host(`bo.local`)"
    entrypoint:
      - python
      - manage.py
      - runserver
      - 0:8000
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: bo

  db:
    image: postgres
    volumes:
      - bo-database:/var/lib/postgresql/data/pgdata
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: bo
      PGDATA: /var/lib/postgresql/data/pgdata

volumes:
  bo-database:
